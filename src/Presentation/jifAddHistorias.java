/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import Funciones.funciones;
import java.awt.HeadlessException;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryyv
 */
public class jifAddHistorias extends javax.swing.JInternalFrame {
DefaultTableModel modelo_antecedente;
DefaultTableModel modelo_alergia;
jifNuevoAntecedente antecedente;
jifNuevaAlergia alergia;
funciones cnn = new funciones();

    /**
     * Creates new form jifHistorias
     */
    public jifAddHistorias() {
        modelo_antecedente = new DefaultTableModel(null, getAntecedente());
        setAntecedente();
        modelo_alergia = new DefaultTableModel(null, getAlergia());
        setAlergia();
        initComponents();
        cargar_proveniencia();
    }
    
    private void cargar_proveniencia() {
        try {
            String sql = "SELECT nombre FROM lugar_procedencia ORDER BY id_procedencia";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                cboProveniencia.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private String[] getAntecedente() {
        String columna[] = new String[] {"Código", "Antecedente", "Fecha"};
        return columna;
    }
    
    private void setAntecedente() {
        try {
            String sql = "SELECT id_antecedente, antecedente.nombre, antecedente.fecha FROM antecedente WHERE" +
                    " n_historia is null";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos [] = new Object[3];
            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    datos [i] = rs.getObject(i + 1);
                }
                modelo_antecedente.addRow(datos);
            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private String[] getAlergia() {
        String columna[] = new String[] {"Código", "Alergias"};
        return columna;
    }
    
    private void setAlergia() {
        try {
            String sql = "SELECT DISTINCT alergia_historia.id_alergia, alergia.nombre FROM alergia, alergia_historia "
                    + "WHERE alergia_historia.id_alergia = alergia.id_alergia AND alergia_historia.n_historia is null";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos [] = new Object[2];
            while (rs.next()) {
                for (int i = 0; i < 2; i++) {
                    datos [i] = rs.getObject(i + 1);
                }
                modelo_alergia.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpFichas = new javax.swing.JTabbedPane();
        pnDatosPersonales = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtApellidoPat = new javax.swing.JTextField();
        txtApellidoMat = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtTelefono1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtOcupacion = new javax.swing.JTextField();
        txtLugar = new javax.swing.JTextField();
        cboEstadoCivil = new javax.swing.JComboBox<>();
        cboProveniencia = new javax.swing.JComboBox<>();
        txtTelefono3 = new javax.swing.JTextField();
        txtTelefono2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtCel13 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtCel12 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtCel11 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtCel21 = new javax.swing.JTextField();
        txtCel22 = new javax.swing.JTextField();
        txtCel23 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        dtchFnacimiento = new com.toedter.calendar.JDateChooser();
        pnDatosClinicos = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAntecedentes = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbAlergias = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaObservaciones = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        btnAntecedente = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnAlergia = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Registrar nueva historia");
        setToolTipText("");
        setAutoscrolls(true);
        setNextFocusableComponent(txtDni);

        tbpFichas.setAutoscrolls(true);
        tbpFichas.setFocusable(false);
        tbpFichas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbpFichasStateChanged(evt);
            }
        });

        pnDatosPersonales.setFocusable(false);

        jLabel1.setText("DNI");
        jLabel1.setFocusable(false);

        jLabel2.setText("Apellidos");
        jLabel2.setFocusable(false);

        jLabel3.setText("Nombres");
        jLabel3.setFocusable(false);

        jLabel4.setText("Teléfono");
        jLabel4.setFocusable(false);

        jLabel5.setText("Cel 1");
        jLabel5.setFocusable(false);

        jLabel6.setText("Cel 2");
        jLabel6.setFocusable(false);

        jLabel7.setText("Correo");
        jLabel7.setFocusable(false);

        jLabel8.setText("Fecha de nacimiento");
        jLabel8.setFocusable(false);

        jLabel9.setText("Dirección");
        jLabel9.setFocusable(false);

        jLabel10.setText("Ocupación");
        jLabel10.setFocusable(false);

        jLabel11.setText("Lugar");
        jLabel11.setFocusable(false);

        jLabel12.setText("Estado civil");
        jLabel12.setFocusable(false);

        jLabel13.setText("Lugar de procedencia");
        jLabel13.setFocusable(false);

        txtDni.setNextFocusableComponent(txtApellidoPat);
        txtDni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDniFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDniFocusLost(evt);
            }
        });
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        txtApellidoPat.setNextFocusableComponent(txtApellidoMat);
        txtApellidoPat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidoPatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoPatFocusLost(evt);
            }
        });
        txtApellidoPat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoPatKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoPatKeyTyped(evt);
            }
        });

        txtApellidoMat.setNextFocusableComponent(txtNombres);
        txtApellidoMat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidoMatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoMatFocusLost(evt);
            }
        });
        txtApellidoMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoMatActionPerformed(evt);
            }
        });
        txtApellidoMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoMatKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoMatKeyTyped(evt);
            }
        });

        txtNombres.setNextFocusableComponent(txtTelefono1);
        txtNombres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombresFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombresFocusLost(evt);
            }
        });
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });

        txtTelefono1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefono1.setNextFocusableComponent(txtTelefono2);
        txtTelefono1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefono1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefono1FocusLost(evt);
            }
        });
        txtTelefono1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono1KeyTyped(evt);
            }
        });

        jLabel14.setText("(074)");
        jLabel14.setFocusable(false);

        txtCorreo.setNextFocusableComponent(dtchFnacimiento);
        txtCorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCorreoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCorreoFocusLost(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });

        txtDireccion.setNextFocusableComponent(txtOcupacion);
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionFocusLost(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });

        txtOcupacion.setNextFocusableComponent(txtLugar);
        txtOcupacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOcupacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOcupacionFocusLost(evt);
            }
        });
        txtOcupacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOcupacionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOcupacionKeyTyped(evt);
            }
        });

        txtLugar.setNextFocusableComponent(cboEstadoCivil);
        txtLugar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLugarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLugarFocusLost(evt);
            }
        });
        txtLugar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLugarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLugarKeyTyped(evt);
            }
        });

        cboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Soltero", "Casado", "Viudo", "Divorciado" }));
        cboEstadoCivil.setNextFocusableComponent(cboProveniencia);
        cboEstadoCivil.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboEstadoCivilPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cboProveniencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        cboProveniencia.setNextFocusableComponent(txaObservaciones);
        cboProveniencia.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboProvenienciaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cboProvenienciaPopupMenuWillBecomeVisible(evt);
            }
        });

        txtTelefono3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefono3.setNextFocusableComponent(txtCel11);
        txtTelefono3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefono3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefono3FocusLost(evt);
            }
        });
        txtTelefono3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefono3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono3KeyTyped(evt);
            }
        });

        txtTelefono2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefono2.setNextFocusableComponent(txtTelefono3);
        txtTelefono2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefono2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefono2FocusLost(evt);
            }
        });
        txtTelefono2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefono2KeyTyped(evt);
            }
        });

        jLabel22.setText("-");
        jLabel22.setFocusable(false);

        jLabel23.setText("-");
        jLabel23.setFocusable(false);

        txtCel13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel13.setNextFocusableComponent(txtCel21);
        txtCel13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel13FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel13FocusLost(evt);
            }
        });
        txtCel13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel13KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel13KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel13KeyTyped(evt);
            }
        });

        jLabel24.setText("-");
        jLabel24.setFocusable(false);

        txtCel12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel12.setNextFocusableComponent(txtCel13);
        txtCel12.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel12FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel12FocusLost(evt);
            }
        });
        txtCel12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel12KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel12KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel12KeyTyped(evt);
            }
        });

        jLabel25.setText("-");
        jLabel25.setFocusable(false);

        txtCel11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel11.setNextFocusableComponent(txtCel12);
        txtCel11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel11FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel11FocusLost(evt);
            }
        });
        txtCel11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel11KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel11KeyTyped(evt);
            }
        });

        jLabel26.setText("-");
        jLabel26.setFocusable(false);

        txtCel21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel21.setNextFocusableComponent(txtCel22);
        txtCel21.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel21FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel21FocusLost(evt);
            }
        });
        txtCel21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel21KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel21KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel21KeyTyped(evt);
            }
        });

        txtCel22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel22.setNextFocusableComponent(txtCel23);
        txtCel22.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel22FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel22FocusLost(evt);
            }
        });
        txtCel22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel22KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel22KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel22KeyTyped(evt);
            }
        });

        txtCel23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCel23.setNextFocusableComponent(txtCorreo);
        txtCel23.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCel23FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCel23FocusLost(evt);
            }
        });
        txtCel23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCel23KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCel23KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCel23KeyTyped(evt);
            }
        });

        jLabel27.setText("-");
        jLabel27.setFocusable(false);

        javax.swing.GroupLayout pnDatosPersonalesLayout = new javax.swing.GroupLayout(pnDatosPersonales);
        pnDatosPersonales.setLayout(pnDatosPersonalesLayout);
        pnDatosPersonalesLayout.setHorizontalGroup(
            pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                                    .addComponent(txtApellidoPat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtApellidoMat, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addComponent(txtNombres))
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                                    .addComponent(txtCel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel25)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel24)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCel13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel22)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel23)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTelefono3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                                    .addComponent(txtCel21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel27)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCel22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel26)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCel23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOcupacion)
                    .addComponent(txtLugar)
                    .addComponent(txtDireccion)
                    .addComponent(cboEstadoCivil, 0, 310, Short.MAX_VALUE)
                    .addComponent(cboProveniencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dtchFnacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnDatosPersonalesLayout.setVerticalGroup(
            pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dtchFnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtApellidoPat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtApellidoMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(txtTelefono2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22)
                                .addComponent(jLabel23)
                                .addComponent(txtTelefono3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtCel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25)
                                .addComponent(jLabel24)
                                .addComponent(txtCel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(txtCel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)
                                .addComponent(jLabel26)
                                .addComponent(txtCel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatosPersonalesLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(cboProveniencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnDatosPersonalesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(pnDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(44, 44, 44)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tbpFichas.addTab("Datos personales", pnDatosPersonales);

        pnDatosClinicos.setFocusable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Antecedentes / alergias"));
        jPanel1.setFocusable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setAutoscrolls(true);

        tbAntecedentes.setModel(modelo_antecedente);
        tbAntecedentes.setFocusable(false);
        jScrollPane1.setViewportView(tbAntecedentes);

        tbAlergias.setModel(modelo_alergia);
        tbAlergias.setFocusable(false);
        jScrollPane3.setViewportView(tbAlergias);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        txaObservaciones.setColumns(20);
        txaObservaciones.setLineWrap(true);
        txaObservaciones.setRows(5);
        txaObservaciones.setWrapStyleWord(true);
        txaObservaciones.setAutoscrolls(false);
        txaObservaciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txaObservacionesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txaObservacionesFocusLost(evt);
            }
        });
        txaObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txaObservacionesKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txaObservaciones);

        jLabel21.setText("Observaciones:");

        btnAntecedente.setText("Registrar antecedente");
        btnAntecedente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntecedenteActionPerformed(evt);
            }
        });

        btnGuardar.setText("Registrar historia");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnAlergia.setText("Registrar alergia");
        btnAlergia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlergiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnDatosClinicosLayout = new javax.swing.GroupLayout(pnDatosClinicos);
        pnDatosClinicos.setLayout(pnDatosClinicosLayout);
        pnDatosClinicosLayout.setHorizontalGroup(
            pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                        .addGroup(pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                        .addGroup(pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAlergia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAntecedente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnDatosClinicosLayout.setVerticalGroup(
            pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDatosClinicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                        .addComponent(btnAntecedente)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlergia)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar))
                    .addGroup(pnDatosClinicosLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbpFichas.addTab("Datos clínicos", pnDatosClinicos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpFichas)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpFichas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbpFichasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbpFichasStateChanged
        if (tbpFichas.getSelectedIndex() == 1) {
            txaObservaciones.requestFocus();
        }
    }//GEN-LAST:event_tbpFichasStateChanged

    private void cboProvenienciaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboProvenienciaPopupMenuWillBecomeVisible

    }//GEN-LAST:event_cboProvenienciaPopupMenuWillBecomeVisible

    private void cboProvenienciaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboProvenienciaPopupMenuWillBecomeInvisible
        tbpFichas.setSelectedIndex(1);
    }//GEN-LAST:event_cboProvenienciaPopupMenuWillBecomeInvisible

    private void cboEstadoCivilPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboEstadoCivilPopupMenuWillBecomeInvisible
        cboProveniencia.requestFocus();
    }//GEN-LAST:event_cboEstadoCivilPopupMenuWillBecomeInvisible

    private void txtLugarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLugarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cboEstadoCivil.requestFocus();
        }
    }//GEN-LAST:event_txtLugarKeyPressed

    private void txtLugarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLugarFocusLost
        txtLugar.setBackground(Color.white);
        txtLugar.setForeground(Color.black);
    }//GEN-LAST:event_txtLugarFocusLost

    private void txtLugarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLugarFocusGained
        txtLugar.setBackground(Color.darkGray);
        txtLugar.setForeground(Color.white);
    }//GEN-LAST:event_txtLugarFocusGained

    private void txtOcupacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtLugar.requestFocus();
        }
    }//GEN-LAST:event_txtOcupacionKeyPressed

    private void txtOcupacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOcupacionFocusLost
        txtOcupacion.setBackground(Color.white);
        txtOcupacion.setForeground(Color.black);
    }//GEN-LAST:event_txtOcupacionFocusLost

    private void txtOcupacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOcupacionFocusGained
        txtOcupacion.setBackground(Color.darkGray);
        txtOcupacion.setForeground(Color.white);
    }//GEN-LAST:event_txtOcupacionFocusGained

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtOcupacion.requestFocus();
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusLost
        txtDireccion.setBackground(Color.white);
        txtDireccion.setForeground(Color.black);
    }//GEN-LAST:event_txtDireccionFocusLost

    private void txtDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusGained
        txtDireccion.setBackground(Color.darkGray);
        txtDireccion.setForeground(Color.white);
    }//GEN-LAST:event_txtDireccionFocusGained

    private void dtchFnacimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dtchFnacimientoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDireccion.requestFocus();
        }
    }//GEN-LAST:event_dtchFnacimientoKeyPressed

    private void txtCorreoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dtchFnacimiento.requestFocus();
        }
    }//GEN-LAST:event_txtCorreoKeyPressed

    private void txtCorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoFocusLost
        txtCorreo.setBackground(Color.white);
        txtCorreo.setForeground(Color.black);
    }//GEN-LAST:event_txtCorreoFocusLost

    private void txtCorreoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoFocusGained
        txtCorreo.setBackground(Color.darkGray);
        txtCorreo.setForeground(Color.white);
    }//GEN-LAST:event_txtCorreoFocusGained

    private void txtTelefono1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel11.requestFocus();
        }
        if (txtTelefono1.getText().length() == 2) {
            txtTelefono2.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono1KeyPressed

    private void txtTelefono1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono1FocusLost
        txtTelefono1.setBackground(Color.white);
        txtTelefono1.setForeground(Color.black);
    }//GEN-LAST:event_txtTelefono1FocusLost

    private void txtTelefono1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono1FocusGained
        txtTelefono1.setBackground(Color.darkGray);
        txtTelefono1.setForeground(Color.white);
        txtTelefono1.selectAll();
    }//GEN-LAST:event_txtTelefono1FocusGained

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtTelefono1.requestFocus();
        }
    }//GEN-LAST:event_txtNombresKeyPressed

    private void txtNombresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombresFocusLost
        txtNombres.setBackground(Color.white);
        txtNombres.setForeground(Color.black);
    }//GEN-LAST:event_txtNombresFocusLost

    private void txtNombresFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombresFocusGained
        txtNombres.setBackground(Color.darkGray);
        txtNombres.setForeground(Color.white);
        txtNombres.selectAll();
    }//GEN-LAST:event_txtNombresFocusGained

    private void txtApellidoMatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoMatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNombres.requestFocus();
        }
    }//GEN-LAST:event_txtApellidoMatKeyPressed

    private void txtApellidoMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoMatActionPerformed

    }//GEN-LAST:event_txtApellidoMatActionPerformed

    private void txtApellidoMatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoMatFocusLost
        txtApellidoMat.setBackground(Color.white);
        txtApellidoMat.setForeground(Color.black);
    }//GEN-LAST:event_txtApellidoMatFocusLost

    private void txtApellidoMatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoMatFocusGained
        txtApellidoMat.setBackground(Color.darkGray);
        txtApellidoMat.setForeground(Color.white);
        txtApellidoMat.selectAll();
    }//GEN-LAST:event_txtApellidoMatFocusGained

    private void txtApellidoPatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPatKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter != '\b' && !Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE || txtApellidoPat.getText().length() >= 15) {
            evt.consume();
        }
        if (Character.isLowerCase(caracter)) {
            String cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtApellidoPatKeyTyped

    private void txtApellidoPatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtApellidoMat.requestFocus();
        }
    }//GEN-LAST:event_txtApellidoPatKeyPressed

    private void txtApellidoPatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoPatFocusLost
        txtApellidoPat.setBackground(Color.white);
        txtApellidoPat.setForeground(Color.black);
    }//GEN-LAST:event_txtApellidoPatFocusLost

    private void txtApellidoPatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoPatFocusGained
        txtApellidoPat.setBackground(Color.darkGray);
        txtApellidoPat.setForeground(Color.white);
        txtApellidoPat.selectAll();
    }//GEN-LAST:event_txtApellidoPatFocusGained

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtDni.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDniKeyTyped

    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtApellidoPat.requestFocus();
            modelo_antecedente = new DefaultTableModel(null, getAntecedente());
            setAntecedente();/*
            modelo_alergia = new DefaultTableModel(null, getAlergia());
            setAlergia();*/
        }
    }//GEN-LAST:event_txtDniKeyPressed

    private void txtDniFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDniFocusLost
        txtDni.setBackground(Color.white);
        txtDni.setForeground(Color.black);
    }//GEN-LAST:event_txtDniFocusLost

    private void txtDniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDniFocusGained
        txtDni.setBackground(Color.darkGray);
        txtDni.setForeground(Color.white);
        txtDni.selectAll();
    }//GEN-LAST:event_txtDniFocusGained

    private void txtTelefono3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono3FocusGained
        txtTelefono3.setBackground(Color.darkGray);
        txtTelefono3.setForeground(Color.white);
        txtTelefono3.selectAll();
    }//GEN-LAST:event_txtTelefono3FocusGained

    private void txtTelefono3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono3FocusLost
        txtTelefono3.setBackground(Color.white);
        txtTelefono3.setForeground(Color.black);
    }//GEN-LAST:event_txtTelefono3FocusLost

    private void txtTelefono3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel11.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono3KeyPressed

    private void txtTelefono2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono2FocusGained
        txtTelefono2.setBackground(Color.darkGray);
        txtTelefono2.setForeground(Color.white);
        txtTelefono2.selectAll();
    }//GEN-LAST:event_txtTelefono2FocusGained

    private void txtTelefono2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefono2FocusLost
        txtTelefono2.setBackground(Color.white);
        txtTelefono2.setForeground(Color.black);
    }//GEN-LAST:event_txtTelefono2FocusLost

    private void txtTelefono2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel11.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono2KeyPressed

    private void txtCel13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel13FocusGained
        txtCel13.setBackground(Color.darkGray);
        txtCel13.setForeground(Color.white);
        txtCel13.selectAll();
    }//GEN-LAST:event_txtCel13FocusGained

    private void txtCel13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel13FocusLost
        txtCel13.setBackground(Color.white);
        txtCel13.setForeground(Color.black);
    }//GEN-LAST:event_txtCel13FocusLost

    private void txtCel13KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel13KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel21.requestFocus();
        }
    }//GEN-LAST:event_txtCel13KeyPressed

    private void txtCel12FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel12FocusGained
        txtCel12.setBackground(Color.darkGray);
        txtCel12.setForeground(Color.white);
        txtCel12.selectAll();
    }//GEN-LAST:event_txtCel12FocusGained

    private void txtCel12FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel12FocusLost
        txtCel12.setBackground(Color.white);
        txtCel12.setForeground(Color.black);
    }//GEN-LAST:event_txtCel12FocusLost

    private void txtCel12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel12KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel21.requestFocus();
        }
    }//GEN-LAST:event_txtCel12KeyPressed

    private void txtCel11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel11FocusGained
        txtCel11.setBackground(Color.darkGray);
        txtCel11.setForeground(Color.white);
        txtCel11.selectAll();
    }//GEN-LAST:event_txtCel11FocusGained

    private void txtCel11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel11FocusLost
        txtCel11.setBackground(Color.white);
        txtCel11.setForeground(Color.black);
    }//GEN-LAST:event_txtCel11FocusLost

    private void txtCel11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel11KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCel21.requestFocus();
        }
    }//GEN-LAST:event_txtCel11KeyPressed

    private void txtCel21FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel21FocusGained
        txtCel21.setBackground(Color.darkGray);
        txtCel21.setForeground(Color.white);
        txtCel21.selectAll();
    }//GEN-LAST:event_txtCel21FocusGained

    private void txtCel21FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel21FocusLost
        txtCel21.setBackground(Color.white);
        txtCel21.setForeground(Color.black);
    }//GEN-LAST:event_txtCel21FocusLost

    private void txtCel21KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel21KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCorreo.requestFocus();
        }
    }//GEN-LAST:event_txtCel21KeyPressed

    private void txtCel22FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel22FocusGained
        txtCel22.setBackground(Color.darkGray);
        txtCel22.setForeground(Color.white);
    }//GEN-LAST:event_txtCel22FocusGained

    private void txtCel22FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel22FocusLost
        txtCel22.setBackground(Color.white);
        txtCel22.setForeground(Color.black);
        txtCel22.selectAll();
    }//GEN-LAST:event_txtCel22FocusLost

    private void txtCel22KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel22KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCorreo.requestFocus();
        }
    }//GEN-LAST:event_txtCel22KeyPressed

    private void txtCel23FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel23FocusGained
        txtCel23.setBackground(Color.darkGray);
        txtCel23.setForeground(Color.white);
        txtCel23.selectAll();
    }//GEN-LAST:event_txtCel23FocusGained

    private void txtCel23FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCel23FocusLost
        txtCel23.setBackground(Color.white);
        txtCel23.setForeground(Color.black);
    }//GEN-LAST:event_txtCel23FocusLost

    private void txtCel23KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel23KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCorreo.requestFocus();
        }
    }//GEN-LAST:event_txtCel23KeyPressed

    private void txtApellidoMatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoMatKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter != '\b' && !Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE || txtApellidoMat.getText().length() >= 15) {
            evt.consume();
        }
        if (Character.isLowerCase(caracter)) {
            String cad = txtApellidoMat.getText();
            cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtApellidoMatKeyTyped

    private void txtTelefono1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtTelefono1.getText().length() > 1) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono1KeyTyped

    private void txtTelefono2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtTelefono2.getText().length() == 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono2KeyTyped

    private void txtTelefono3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono3KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtTelefono3.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefono3KeyTyped

    private void txtCel11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel11KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel11.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel11KeyTyped

    private void txtCel12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel12KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel12.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel12KeyTyped

    private void txtCel13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel13KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel13.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel13KeyTyped

    private void txtCel21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel21KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel21.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel21KeyTyped

    private void txtCel22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel22KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel22.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel22KeyTyped

    private void txtCel23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel23KeyTyped
        char caracter = evt.getKeyChar();
        if (caracter < '0' || caracter > '9' && caracter != '\b' || txtCel23.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCel23KeyTyped

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter != '\b' && !Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE || txtNombres.getText().length() >= 30) {
            evt.consume();
        }
        if (Character.isLowerCase(caracter)) {
            String cad = txtNombres.getText();
            cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtTelefono1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono1KeyReleased
        if (txtTelefono1.getText().length() == 2) {
            txtTelefono2.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono1KeyReleased

    private void txtDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyReleased
        if (txtDni.getText().length() == 8) {
            txtApellidoPat.requestFocus();
            modelo_antecedente = new DefaultTableModel(null, getAntecedente());
            setAntecedente();
            modelo_alergia = new DefaultTableModel(null, getAlergia());
            setAlergia();
            tbAntecedentes.setModel(modelo_antecedente);
            tbAlergias.setModel(modelo_alergia);
        }
    }//GEN-LAST:event_txtDniKeyReleased

    private void txtTelefono2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono2KeyReleased
        if (txtTelefono2.getText().length() == 2) {
            txtTelefono3.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono2KeyReleased

    private void txtTelefono3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefono3KeyReleased
        if (txtTelefono3.getText().length() == 2) {
            txtCel11.requestFocus();
        }
    }//GEN-LAST:event_txtTelefono3KeyReleased

    private void txtCel11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel11KeyReleased
        if (txtCel11.getText().length() == 3) {
            txtCel12.requestFocus();
        }
    }//GEN-LAST:event_txtCel11KeyReleased

    private void txtCel12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel12KeyReleased
        if (txtCel12.getText().length() == 3) {
            txtCel13.requestFocus();
        }
    }//GEN-LAST:event_txtCel12KeyReleased

    private void txtCel13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel13KeyReleased
        if (txtCel13.getText().length() == 3) {
            txtCel21.requestFocus();
        }
    }//GEN-LAST:event_txtCel13KeyReleased

    private void txtCel21KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel21KeyReleased
        if (txtCel21.getText().length() == 3) {
            txtCel22.requestFocus();
        }
    }//GEN-LAST:event_txtCel21KeyReleased

    private void txtCel22KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel22KeyReleased
        if (txtCel22.getText().length() == 3) {
            txtCel23.requestFocus();
        }
    }//GEN-LAST:event_txtCel22KeyReleased

    private void txtCel23KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCel23KeyReleased
        if (txtCel23.getText().length() == 3) {
            txtCorreo.requestFocus();
        }
    }//GEN-LAST:event_txtCel23KeyReleased

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
        if (txtCorreo.getText().length() >= 40) {
            evt.consume();
        }
        char caracter = evt.getKeyChar();
        if (Character.isUpperCase(caracter)) {
            String cad = txtCorreo.getText();
            cad = ("" + caracter).toLowerCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtCorreoKeyTyped

    private void dtchFnacimientoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dtchFnacimientoFocusGained
        dtchFnacimiento.setBackground(Color.darkGray);
        dtchFnacimiento.setForeground(Color.white);
    }//GEN-LAST:event_dtchFnacimientoFocusGained

    private void dtchFnacimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dtchFnacimientoFocusLost
        dtchFnacimiento.setBackground(Color.white);
        dtchFnacimiento.setForeground(Color.black);
    }//GEN-LAST:event_dtchFnacimientoFocusLost

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        char caracter = evt.getKeyChar();
        if (Character.isLowerCase(caracter)) {
            String cad = txtDireccion.getText();
            cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
        if (txtDireccion.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDireccionKeyTyped

    private void txtOcupacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOcupacionKeyTyped
        char caracter = evt.getKeyChar();
        if (Character.isLowerCase(caracter)) {
            String cad = txtOcupacion.getText();
            cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
        if (txtOcupacion.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_txtOcupacionKeyTyped

    private void txtLugarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLugarKeyTyped
        char caracter = evt.getKeyChar();
        if (Character.isLowerCase(caracter)) {
            String cad = txtLugar.getText();
            cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
        if (txtLugar.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txtLugarKeyTyped

    private void txaObservacionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txaObservacionesFocusGained
        txaObservaciones.setBackground(Color.yellow);
    }//GEN-LAST:event_txaObservacionesFocusGained

    private void txaObservacionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txaObservacionesFocusLost
        txaObservaciones.setBackground(Color.white);
    }//GEN-LAST:event_txaObservacionesFocusLost

    private void txaObservacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaObservacionesKeyTyped
        if (txaObservaciones.getText().length() >= 500) {
            evt.consume();
        }
    }//GEN-LAST:event_txaObservacionesKeyTyped

    private void btnAntecedenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntecedenteActionPerformed
        if (antecedente == null || antecedente.isClosed()) {
            antecedente = new jifNuevoAntecedente();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = antecedente.getSize();
            antecedente.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(antecedente);
            antecedente.show();
        }
    }//GEN-LAST:event_btnAntecedenteActionPerformed

    private void btnAlergiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlergiaActionPerformed
        if (alergia == null || alergia.isClosed()) {
            alergia = new jifNuevaAlergia();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = alergia.getSize();
            alergia.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(alergia);
            alergia.show();            
        }
    }//GEN-LAST:event_btnAlergiaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        insertar_paciente();
        insertar_historia();
        relacion_alergias();
        dispose();
        jifSearchHistorias historias = new jifSearchHistorias();
        frmMain.lypMain.add(historias);
        Dimension ds = frmMain.lypMain.getSize();
        Dimension fs = historias.getSize();
        historias.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
        try {
            historias.setSelected(true);
            historias.setMaximum(true);
        } catch (PropertyVetoException e) {
            System.out.println(e.getMessage());
        }
        historias.show();
    }//GEN-LAST:event_btnGuardarActionPerformed

    public void insertar_paciente() {
        try {
            //obtener la fecha y salida por pantalla con formato:
            Date date = new Date();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            System.out.println(dateFormat.format(date));
        
            //insertar paciente
            Negocio.daoPaciente objPaciente = new Negocio.daoPaciente();
            objPaciente.setDni(txtDni.getText());
            objPaciente.setApellido_pat(txtApellidoPat.getText());
            objPaciente.setApellido_mat(txtApellidoMat.getText());
            objPaciente.setNombres(txtNombres.getText());
            objPaciente.setTelefono(txtTelefono1.getText() + txtTelefono2.getText() + txtTelefono3.getText());
            objPaciente.setCel1(txtCel11.getText() + txtCel12.getText() + txtCel13.getText());
            objPaciente.setCel2(txtCel21.getText() + txtCel22.getText() + txtCel23.getText());
            objPaciente.setCorreo(txtCorreo.getText());
            Date fecha = dtchFnacimiento.getDate();
            String fnacim = String.valueOf(dateFormat.format(fecha));
            objPaciente.setF_nacimiento(fnacim);
            objPaciente.setDireccion(txtDireccion.getText());
            objPaciente.setOcupacion(txtOcupacion.getText());
            objPaciente.setLugar(txtLugar.getText());
            objPaciente.setEstado_civil(cboEstadoCivil.getSelectedItem().toString());
            objPaciente.setId_proveniencia(cboProveniencia.getSelectedIndex());
            if (objPaciente.insertar() == true) {
                JOptionPane.showMessageDialog(rootPane, "Paciente registrado con éxito");
            }else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo registrar Paciente");
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public void insertar_historia() {
        //obtener la fecha y salida por pantalla con formato:
        Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        System.out.println(dateFormat.format(date));
        
        //insertar historia_clinica
        Negocio.daoHistoria_clinica objHistoria = new Negocio.daoHistoria_clinica();
        objHistoria.setFecha(dateFormat.format(date));
        objHistoria.setObservaciones(txaObservaciones.getText());
        objHistoria.setDni_paciente(txtDni.getText());
        if (objHistoria.insertar() == true) {
            JOptionPane.showMessageDialog(rootPane, "Historia Clínica registrada con éxito");
            try {
                //terminar de insertar antecedentes
                Negocio.daoAntecedente objAntecedente = new Negocio.daoAntecedente();
                for (int i = 0; i < tbAntecedentes.getRowCount(); i++) {
                    objAntecedente.setN_historia(Integer.parseInt(objHistoria.consultar()) - 1);
                    objAntecedente.setId_antecedente(Integer.parseInt(tbAntecedentes.getValueAt(i, 0).toString()));
                    if (objAntecedente.relacion() == true) {
                        JOptionPane.showMessageDialog(rootPane, "Antecedente registrado con éxito");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "No se consiguió registrar antecedente");
                    }
                }
            } catch (NumberFormatException | HeadlessException c) {
                System.out.println(c.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se pudo registrar Historia Clínica");    
        }
    }
    
    public void relacion_alergias() {
        try {
            //terminar de insertar alergias
            Negocio.daoHistoria_clinica objHistoria = new Negocio.daoHistoria_clinica();
            Negocio.daoAlergia_historia objAlergia_historia = new Negocio.daoAlergia_historia();    
            for (int i = 0; i < tbAlergias.getSelectedRowCount(); i++) {
                objAlergia_historia.setN_historia(Integer.parseInt(objHistoria.consultar()) - 1);
                objAlergia_historia.setId_Alergia(Integer.parseInt(tbAlergias.getValueAt(i, 0).toString()));
                if (objAlergia_historia.insertarN_historia() == true) {
                    JOptionPane.showMessageDialog(rootPane, "Alergia registrada con éxito"); 
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se consiguió registrar alergia");
                }
            }
        }catch (NumberFormatException | HeadlessException d) {
            System.out.println(d.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlergia;
    private javax.swing.JButton btnAntecedente;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cboEstadoCivil;
    private javax.swing.JComboBox<String> cboProveniencia;
    private com.toedter.calendar.JDateChooser dtchFnacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnDatosClinicos;
    private javax.swing.JPanel pnDatosPersonales;
    public static javax.swing.JTable tbAlergias;
    public static javax.swing.JTable tbAntecedentes;
    private javax.swing.JTabbedPane tbpFichas;
    public static javax.swing.JTextArea txaObservaciones;
    private javax.swing.JTextField txtApellidoMat;
    private javax.swing.JTextField txtApellidoPat;
    private javax.swing.JTextField txtCel11;
    private javax.swing.JTextField txtCel12;
    private javax.swing.JTextField txtCel13;
    private javax.swing.JTextField txtCel21;
    private javax.swing.JTextField txtCel22;
    private javax.swing.JTextField txtCel23;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    public static javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtLugar;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JTextField txtTelefono1;
    private javax.swing.JTextField txtTelefono2;
    private javax.swing.JTextField txtTelefono3;
    // End of variables declaration//GEN-END:variables
}
