/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryyv
 */
public class jifSearchHistorias extends javax.swing.JInternalFrame {
DefaultTableModel modelo_dni;
DefaultTableModel modelo_nombre;
jifNuevaConsulta nueva;
Funciones.funciones cnn = new Funciones.funciones();
jifNuevaConsulta consulta;
jifAddHistorias historia;

    /**
     * Creates new form jifShowHistorias
     */
    public jifSearchHistorias() {
        modelo_dni = new DefaultTableModel(null, getColumnad());
        modelo_nombre = new DefaultTableModel(null, getColumnan());
        setFilas();
        initComponents();
        if (nueva == null || nueva.isClosed()) {
            btnConsulta.enable(true);
        } else {
            btnConsulta.enable(false);
        }
    }
    private String[] getColumnad() {
        String columna[] = new String[] {"DNI", "Paciente", "Celular"};
        return columna;
    }
    
    private String[] getColumnan() {
        String columna[] = {"DNI", "Paciente", "Celular"};
        return columna;
    }
    
    private void setFilas() {
        try {
            String sql = "SELECT p.dni, Concat(p.apellido_pat, ' ', p.apellido_mat, ' ', p.nombres) AS 'Paciente', "
                    + "p.cel1 FROM paciente p";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[3];
            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    datos [i] = rs.getObject(i + 1);
                }
                modelo_dni.addRow(datos);
                modelo_nombre.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpHistorias = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbHistoriasDNI = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHistoriasNom = new javax.swing.JTable();
        btnConsulta = new javax.swing.JButton();
        btnNuevaHistoria = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Buscar historia");
        setAutoscrolls(true);

        tbpHistorias.setFocusable(false);

        jPanel1.setAutoscrolls(true);
        jPanel1.setFocusable(false);

        jLabel1.setText("Escriba un DNI para buscar");
        jLabel1.setFocusable(false);

        txtDni.setNextFocusableComponent(btnGuardar);
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        tbHistoriasDNI.setModel(modelo_dni);
        tbHistoriasDNI.setFocusable(false);
        tbHistoriasDNI.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(tbHistoriasDNI);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
        );

        tbpHistorias.addTab("Por DNI", jPanel1);

        jPanel2.setFocusable(false);

        jLabel2.setText("Escriba un nombre para buscar");
        jLabel2.setFocusable(false);

        txtNombres.setNextFocusableComponent(btnGuardar);
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombresKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });

        tbHistoriasNom.setModel(modelo_nombre);
        tbHistoriasNom.setFocusable(false);
        tbHistoriasNom.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tbHistoriasNom);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtNombres)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
        );

        tbpHistorias.addTab("Por apellidos", jPanel2);

        btnConsulta.setText("Consulta");
        btnConsulta.setNextFocusableComponent(btnNuevaHistoria);
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        btnNuevaHistoria.setText("Nueva Historia");
        btnNuevaHistoria.setNextFocusableComponent(btnCancelar);
        btnNuevaHistoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaHistoriaActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.setNextFocusableComponent(btnConsulta);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpHistorias, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevaHistoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpHistorias)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConsulta)
                        .addComponent(btnGuardar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelar)
                        .addComponent(btnNuevaHistoria)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscar_dni(String texto) {
        try {
            String [] titulos = {"DNI", "Paciente", "Celular"};
            String sql = "SELECT p.dni, Concat(p.apellido_pat, ' ', p.apellido_mat, ' ', p.nombres) AS 'Paciente', p.cel1 "
                    + "FROM paciente p WHERE p.dni LIKE '" + texto + "%'";
            System.out.println(sql);
            DefaultTableModel modelo_dni = new DefaultTableModel(null,titulos);
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            String [] fila = new String[3];
            while(rs.next()) {
                for (int i = 0; i < 3; i++) {
                    fila[i] = rs.getString(i + 1);
                }
                modelo_dni.addRow(fila);
            }
            tbHistoriasDNI.setModel(modelo_dni);
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void buscar_nombres(String texto) {
        try {
            String [] titulos = {"DNI", "Paciente", "Celular"};
            String sql = "SELECT p.dni, Concat(p.apellido_pat, ' ', p.apellido_mat, ' ', p.nombres), p.cel1 FROM paciente "
                    + "p WHERE Concat(p.apellido_pat, ' ', p.apellido_mat, ' ', p.nombres) LIKE '" + texto + "%'";
            System.out.println(sql);
            DefaultTableModel modelo_nombre = new DefaultTableModel (null, titulos);
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            String[] fila = new String[3];
            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    fila [i] = rs.getString(i + 1);
                }
                modelo_nombre.addRow(fila);
            }
            tbHistoriasNom.setModel(modelo_nombre);
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
        String text = txtDni.getText();
        buscar_dni(text);
    }//GEN-LAST:event_txtDniKeyTyped

    private void txtDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyReleased
        String text = txtDni.getText();
        buscar_dni(text);
    }//GEN-LAST:event_txtDniKeyReleased

    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
        String text = txtDni.getText();
        buscar_dni(text);
    }//GEN-LAST:event_txtDniKeyPressed

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        String text = txtNombres.getText();
        buscar_nombres(text);
    }//GEN-LAST:event_txtNombresKeyPressed

    private void txtNombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyReleased
        String text = txtNombres.getText();
        buscar_nombres(text);
    }//GEN-LAST:event_txtNombresKeyReleased

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        String text = txtNombres.getText();
        buscar_nombres(text);
    }//GEN-LAST:event_txtNombresKeyTyped

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        if (consulta == null || consulta.isClosed()) {
            consulta = new jifNuevaConsulta();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = consulta.getSize();
            consulta.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(consulta);
            consulta.show();
            consulta.btnPaciente.setEnabled(false);
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevaHistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaHistoriaActionPerformed
        if (historia == null || historia.isClosed()) {
            historia = new jifAddHistorias();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = historia.getSize();
            historia.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(historia);
            historia.show();
        }
    }//GEN-LAST:event_btnNuevaHistoriaActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (tbpHistorias.getSelectedIndex() == 0) {
            jifNuevaConsulta.txtDni.setText(tbHistoriasDNI.getValueAt(tbHistoriasDNI.getSelectedRow(), 0).toString());
            consultar_paciente(jifNuevaConsulta.txtDni.getText());
            jifNuevaConsulta.txtDni.setEnabled(false);
            jifNuevaConsulta.txtApellidoPat.setEnabled(false);
            jifNuevaConsulta.txtApellidoMat.setEnabled(false);
            jifNuevaConsulta.txtNombres.setEnabled(false);
            dispose();
        } else {
            jifNuevaConsulta.txtDni.setText(tbHistoriasNom.getValueAt(tbHistoriasNom.getSelectedRow(), 0).toString());
            consultar_paciente(jifNuevaConsulta.txtDni.getText());
            jifNuevaConsulta.txtDni.setEnabled(false);
            jifNuevaConsulta.txtApellidoPat.setEnabled(false);
            jifNuevaConsulta.txtApellidoMat.setEnabled(false);
            jifNuevaConsulta.txtNombres.setEnabled(false);
            dispose();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    void consultar_paciente(String dni) {
        try {
            String sql = "SELECT p.apellido_pat, p.apellido_mat, p.nombres FROM paciente p WHERE p.dni = '" + dni + "'";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object[3];
            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    jifNuevaConsulta.txtApellidoPat.setText(rs.getString(1));
                    jifNuevaConsulta.txtApellidoMat.setText(rs.getString(2));
                    jifNuevaConsulta.txtNombres.setText(rs.getString(3));
                }
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnConsulta;
    public static javax.swing.JButton btnGuardar;
    public static javax.swing.JButton btnNuevaHistoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tbHistoriasDNI;
    public static javax.swing.JTable tbHistoriasNom;
    private javax.swing.JTabbedPane tbpHistorias;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
