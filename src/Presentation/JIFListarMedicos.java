/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryyv
 */
public class JIFListarMedicos extends javax.swing.JInternalFrame {
    DefaultTableModel modelo;
    JIFModificarMedico modificarmedico;
    JIFNuevoDoctor nuevomedico;
    Funciones.funciones cnn = new Funciones.funciones();

    /**
     * Creates new form JIFListarMedicos
     */
    public JIFListarMedicos() {
        modelo = new DefaultTableModel(null, getColumnas());
        setFilas();
        initComponents();
    }
    
    private String[] getColumnas() {
        String [] titulos = {"DNI", "Doctor", "Tel√©fono"};
        return titulos;
    }
    
    private void setFilas() {
        try {
            String sql = "SELECT doctor.dni, CONCAT(doctor.apellido_pat, ' ',doctor.apellido_mat, ' ', doctor.nombres) AS"
                    + " medico, doctor.celular FROM doctor";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            Object datos[] = new Object [3];
            while (rs.next()) {
                for (int i = 0; i < 3; i++) {
                    datos[i] = rs.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDoctor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMedicos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("Escriba un apellido para buscar");

        txtDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDoctorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDoctorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDoctorKeyTyped(evt);
            }
        });

        tbMedicos.setModel(modelo);
        tbMedicos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbMedicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMedicosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMedicos);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDoctor))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(90, Short.MAX_VALUE)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnModificar)
                    .addComponent(btnSalir))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (modificarmedico == null || modificarmedico.isClosed()) {
            modificarmedico = new JIFModificarMedico();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = modificarmedico.getSize();
            modificarmedico.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(modificarmedico);
            modificarmedico.show();
            modificarmedico.txtDni.setText(tbMedicos.getValueAt(tbMedicos.getSelectedRow(), 0).toString());
            consultar(modificarmedico.txtDni.getText());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void consultar(String texto) {
        try {
            String sql = "SELECT doctor.dni, doctor.apellido_pat, doctor.apellido_mat, doctor.nombres, doctor.celular, "
                    + "doctor.direccion, doctor.f_nacimiento FROM doctor WHERE doctor.dni = '" + 
                    tbMedicos.getValueAt(tbMedicos.getSelectedRow(), 0).toString() + "'";
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()) {
                modificarmedico.txtApellidoPat.setText(rs.getString(2));
                modificarmedico.txtApellidoMat.setText(rs.getString(3));
                modificarmedico.txtNombres.setText(rs.getString(4));
                modificarmedico.txtTelefono.setText(rs.getString(5));
                modificarmedico.txtDireccion.setText(rs.getString(6));
                modificarmedico.dtchFnacimiento.setText(rs.getString(7));
            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if (nuevomedico == null || nuevomedico.isClosed()) {
            nuevomedico = new JIFNuevoDoctor();
            Dimension ds = frmMain.lypMain.getSize();
            Dimension fs = nuevomedico.getSize();
            nuevomedico.setLocation((ds.width - fs.width) / 2, (ds.height - fs.height) / 2);
            frmMain.lypMain.add(nuevomedico);
            nuevomedico.show();
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tbMedicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMedicosMouseClicked
        btnModificar.setEnabled(true);
    }//GEN-LAST:event_tbMedicosMouseClicked

    private void txtDoctorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorKeyTyped
        char caracter = evt.getKeyChar();
        if (caracter != '\b' && !Character.isLetter(caracter) && caracter != KeyEvent.VK_SPACE) {
            evt.consume();
        } else if (Character.isLowerCase(caracter)) {
            String cad = ("" + caracter).toUpperCase();
            caracter = cad.charAt(0);
            evt.setKeyChar(caracter);
        }
    }//GEN-LAST:event_txtDoctorKeyTyped

    private void txtDoctorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorKeyPressed
    
    private void buscar(String texto) {
        try {
            String [] titulos = {"DNI", "Doctor", "Tel√©fono"};
            String sql = "SELECT doctor.dni, CONCAT(doctor.apellido_pat, ' ',doctor.apellido_mat, ' ', doctor.nombres) AS"
                    + " medico, doctor.celular WHERE medico LIKE '" + texto + "_%' ";
            System.out.println(sql);
            DefaultTableModel model = new DefaultTableModel(null,titulos);
            PreparedStatement ps = cnn.getCnn().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            String [] fila = new String[3];
            while(rs.next()) {
                for (int i = 0; i < 3; i++) {
                    fila[i] = rs.getString(i + 1);
                }
                model.addRow(fila);
            }
            tbMedicos.setModel(model);
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void txtDoctorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorKeyReleased
        String texto = txtDoctor.getText();
        buscar(texto);
    }//GEN-LAST:event_txtDoctorKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMedicos;
    private javax.swing.JTextField txtDoctor;
    // End of variables declaration//GEN-END:variables
}
